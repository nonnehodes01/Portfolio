[["opdracht-1-reproduceerbaar-onderzoek.html", "Opdracht 1: Reproduceerbaar onderzoek 1.1: C. elegans plaatexperiment 1.2: Open science", " Opdracht 1: Reproduceerbaar onderzoek 1.1: C. elegans plaatexperiment Deze opdracht heeft als doel om data visueel te maken met get ggplot2 pakket, waarbij een dosis-responsanalyse met een log-logistiek model wordt uitgevoerd. Voor deze opdracht wordt gebruik gemaakt van gegevens die zijn verstrekt door J. Louter (INT/ILC) en afkomstig zijn van een experiment met C. elegans nematoden. Opdrachten: wat opvalt aan de excel sheet is dat het erg onoverzichtelijk is, onderdelen zijn gelabeld met kleurtjes, maar er is geen legenda waarin wordt aangegeven wat deze kleuren betekenen. De kleuren in het schema zijn erg afleidend en maken het moeilijk om de data te inspecteren. Ook valt op dat er in het de kolom “bubble” steeds de waarde #N/B staat, ook hiervan is nergens aangegeven waar dit voor staat. Er vanuitgaande dathet staat voor “niet berekend” lijkt het ook alsof de data dus niet compleet is/niet goed is afgerond. Als derde valt het op dat er veel data in dit databestand staat die in de metadata terecht hoort. wat voor incubatiebuizen er worden gebruikt, de incubatie unit, de gebruikte rpm, de incubatie themperatuur, etc. Dit is allemaal steeds de zelfde waarde, en hoort daardoor niet in dit bestand terecht. Tot slot valt op dat de raw data in het bestand toegevoegd is, dit is erg gevaarlijk, omdat het kan zijn dat je daar perongeluk en onopgemerkt weizigingen in maakt. De raw data moet altijd los opgeslagen worden en er mag alleen in een kopie hiervan gewerkt worden. #inlezen van de excelsheet c_elegans_plaatexp_cp &lt;- read_excel(&quot;~/HU_ILC_DS2/Datascience2_portfolio/data/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;) #openen als tibble om te kunnen inspecteren welke gegevenstypen gegeven zijn aan de data as_tibble(c_elegans_plaatexp_cp) ## # A tibble: 360 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## 7 NA NA 2 b experiment 3 CE.LIQ.FLOW.062 ## 8 NA NA 2 c experiment 3 CE.LIQ.FLOW.062 ## 9 NA NA 2 d experiment 3 CE.LIQ.FLOW.062 ## 10 NA NA 2 e experiment 3 CE.LIQ.FLOW.062 ## # ℹ 350 more rows ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;chr&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, … De verwachte gegevenstypen van de kolommen RawData, compName en compConcentration zijn als volgt; RawData hoort dbl te zijn, compName hoort chr te zijn en compConcentration hoort dbl te zijn. zoals in de tibble hierboven te zien is RawData dbl, compName een chr en compConcentration is ook een chr. compCOncentration komt dus niet overeen, dit zal later problemen veroorzaken. #maken van een scatterplot met op de x-as de concentratie en op de y-as de ruwe data, de plot is gemaakt op basis van de data in de reader uit les 4 ggplot(data = c_elegans_plaatexp_cp, aes(x = compConcentration , y = RawData)) + geom_point(aes(color = compName, shape = expType))+ labs(title = &quot;De relatie tussen de concetratie en de gemeten data&quot;, y = &quot;raw data&quot;, x = &quot;concentration&quot;) + theme_minimal() zoals aangegeven bij c is compConcentration een chr in plaats van een dbl, hierdoor is de volgorde van de x-as niet correct, dit moet dus aangepast worden. #corrigeren van het gegevenstype van de compConcentration c_elegans_plaatexp_cp$compConcentration &lt;- as.double(c_elegans_plaatexp_cp$compConcentration) #weergeven om te checken of de verandering correct plaatsgevonden heeft as_tibble(c_elegans_plaatexp_cp) ## # A tibble: 360 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## 7 NA NA 2 b experiment 3 CE.LIQ.FLOW.062 ## 8 NA NA 2 c experiment 3 CE.LIQ.FLOW.062 ## 9 NA NA 2 d experiment 3 CE.LIQ.FLOW.062 ## 10 NA NA 2 e experiment 3 CE.LIQ.FLOW.062 ## # ℹ 350 more rows ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;dbl&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, … #log10 transformatie toevoegen aan kopie van de data c_elegans_plaatexp_cp2 &lt;- c_elegans_plaatexp_cp %&gt;% mutate(log10conc = log10(c_elegans_plaatexp_cp$compConcentration)) #maken van een scatterplot met op de x-as de log 10 transformatie van de concentratie en op de y-as de ruwe data, de plot is gemaakt op basis van de data in de reader uit les 4 ggplot(data = c_elegans_plaatexp_cp2, aes(x = log10conc, y = RawData, color = compName, shape = expType)) + geom_jitter(alpha = 0.2)+ labs(title = &quot;De relatie tussen de log10 transformatie van de concentratie en de gemeten data &quot;, y = &quot;raw data&quot;, x = &quot;log10 transformation&quot;) + theme_minimal() Ethanol S-Medium Stap 1: Verzamel de gegevens Stap 2: Verken de gegevens met grafieken om patronen en uitschieters te identificeren. Stap 3: Analyseer het effect van de verschillende concentraties op het aantal nakomelingen Stap 4: Pas een curvefitting-model toe, zoals logistische regressie, om de vorm van de concentratie-responscurve te bepalen. Stap 5: Schat/bereken de IC50-waarden voor elke verbinding om eventuele verschillen tussen de verbindingen te identificeren. Stap 6: Valideer de analyse door te controleren of de aannames van de statistische methoden worden voldaan. Stap 7: Interpretatie: Beoordeel of er een significant effect is van concentraties op het aantal nakomelingen en of de verschillende verbindingen verschillende curves (IC50) hebben. #het normaliseren van de controlNegative #Stap 1: filter de juiste data (exptype == rawdata) control_negative &lt;- c_elegans_plaatexp_cp %&gt;% filter(expType == &quot;controlNegative&quot;) # Stap 2: Bereken het gemiddelde gemiddelde_negative_controle &lt;- mean(control_negative$RawData) # Stap 3: deel alle rawData door de waarde verkregen bij gemiddelde_negative_control c_elegans_plaatexp_cp_normalised &lt;- c_elegans_plaatexp_cp %&gt;% mutate(normalised_RawData = RawData/gemiddelde_negative_controle, log10conc = log10(c_elegans_plaatexp_cp$compConcentration)) #Stap 4: maak de plot ggplot(data = c_elegans_plaatexp_cp_normalised, aes(x = log10conc, y = normalised_RawData, color = compName, shape = expType)) + geom_jitter(alpha = 0.2)+ labs(title = &quot;De relatie tussen de log10 transformatie van de concetratie en de gemeten data&quot;, y = &quot;normalised raw data&quot;, x = &quot;log10 transformation&quot;) + theme_minimal() ## Warning: Removed 6 rows containing missing values (`geom_point()`). omdat het normaliseren van de data er voor zorgt dat de schaal van de gegevens wordt gestandaardiseerd, hierdoor is het makkelijker om data met verschillende variabelen te vergelijken en combineren. Ook voorkomt het de invloed van hele grote getallen, we werken met waardes tussen de 0 en 100, dit op een kleineere schaal in beeld brengen is handiger dan op die grootte. 1.2: Open science Deel 1: Open collegiale toetsing Deze opracht richt zich op het uitvoeren van een open collegiale toetsing. Een open collegiale toetsing is een proces waarbij wetenschappelijke resultaten worden beoordeeld door vakgenoten, met als doel de kwaliteit, betrouwebaarheid en relevantie van het onderzoek te garanderen. In deze opdracht maak ik gebruik van het artikel “Genome-wide expression datasets of anti-VEGF and dexamethasone treatment of angiogenesis in the rat cornea” geschreven door Anthony Mukwaya, Pierfrancesco Mirabelli, Anton Lennikov, Maria Xeroudaki, Mira Schaupper, Beatrice Peebo en Neil Lagalia. Dit artikel onderzoekt de werkzaamheid en resistentie van anti-VEGF-middelen in de oogheelkunde. Ze willen graag een effectievere therapie vinden door genexpressieveranderingen tussen dexamethason en anti-VEGF-behandelingen te vergelijken in het hoornvlies van ratten. Dit artikel is te vinden via de website van ncbi of via de website van nature scientific data. Toetsing resultaten: Doel van de studie: Ja Gegevensbeschikbaarheid: Ja Gegevens Locatie: Niet specifiek vermeld, maar wel in tabellen weergeven in de paper. Studie Locatie: Nee Auteur recensie: Geen informatie beschikbaar Ethische uitspraak: Nee Financieringsverklaring: Ja Code Beschikbaarheid: Nee Deel 2: reproduceerbaarheid van artikelen gepubliceerd onder het open databeleid In deze opdracht wordt de reproduceerbaarheid van een artikel onderzocht dat gepubliceerd is onder het open databeleid. De analyses zulen gerepliceert worden om te controleren hoe repliceerbaar het daadwerkelijk is. De data en R code die voor deze opdracht wordt gebruikt is te vinden op Github en hoort bij een paper die te vinden is op Springer link (gevonden via google scolar) Wat wil de code bereiken: De code wil uitzoeken of en welke verschillende factoren van invloed zijn op het toedienen van kalmerende medicatie bij mensen met dementiewanneer dit niet nodig is.Dit wordt gedaan door een case-control studie uit te voeren op verschillende afdelingen van de interne geneeskunde in Hamburg, dit is uitgevoerd aan de hand van logische regressies. Hoe makkelijk is de code leesbaar: ik zou de leesbaarheid van de code een moeitegraag van 3 geven, het is allemaal net iets anders dan wij aangeleerd hebben en het is in het duits, waardoor het nog net iets meer moeite kost. Wel is het niet heel anders dan wat wij hebben geleerd, dus ik had al snel door hoe alles zat. Aanpassingen die ik gedaan heb aan het script: Packages geïnstalleerd Getransleerd naar nederlands (vanuit duits) Hoeveel moeite kostte het om het paper te reproduceren: Ik zou de moeitegraad een 1 geven, het enige lastige was het duitse paper lezen en transleren. de data en de code stonden op de zelfde plek en er kon makkelijk naar verwezen worden, ook hoefde ik geen aanpassingen te doen aan de code om grafieken en tabellen te produceren. een voorbeeld van zon tabel is te zien in figuur 1. de code hiervoor is te vinden in figuur 2. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
